c
с
request.hosсt + request.optional_port.to_s
request.host + request.optional_port.to_s
request.host + request.optional_port
request.host
request.original_url
request.optional_port
request.optional+port
request.host_with_port
request.port
request.url
request.path
request.domain
request
c
Image.last.img.url
Image.last.img
Image.last
image
img
ims
request.url
Rails.base_url
Rails.url
Rails
base_url
c
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x").map {| d | d.to_i } 
size.each { |d| d = d.to_i }
size.each { |d| d.to_i! }
size.each { |d| d.to_i }
size
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x").each {| d | d.to_i } 
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x").each {| d | d.to_i! } 
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).width
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).height
      size = Paperclip::Geometry.from_file(image.img.path(:medium))[0]
      size = Paperclip::Geometry.from_file(image.img.path(:medium)) 
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x") { | d | puts d  }
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x") { | d | d.to_i! }
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x") { | d | d.to_i }
size[0].to_i
size[0]
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x") { | d | d.to_i }
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s.split("x")
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).to_s
      size = Paperclip::Geometry.from_file(image.img.path(:medium)).split("x")
Paperclip::Geometry.from_file(image.img.path(:medium))      size = Paperclip::Geometry.from_file(image.img.path(:medium)).split("x")
Paperclip::Geometry.from_file(image.img.path(:medium))
image.img
image
Paperclip::Geometry.from_file(image.img.path)
image.img.path
image.img.to_file
image.img.methods
image.img
image.img.
image.img.to_file
image.img.queued_for_write
image.img
image.size
c
self.size
exit
geometry = Paperclip::Geometry.from_file(tempfile)
tempfile = img.queued_for_write[:medium]
geometry = Paperclip::Geometry.from_file(tempfile)
tempfile = img.queued_for_write[:original]
img.queued_for_write[:original]
img.queued_for_write
img.queued_for_write[:img]
img.queued_for_write
img.qeued_for_write
img
c
upload
